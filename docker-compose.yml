version: '3.8'

services:
  weaviate:
    image: semitechnologies/weaviate:1.24.1
    container_name: esco_weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      LIMIT_RESOURCES: 'true'
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - esco_network

  t2v-transformers:
    image: ${TRANSFORMER_IMAGE:-semitechnologies/transformers-inference:sentence-transformers-all-MiniLM-L6-v2}
    container_name: esco_transformers
    environment:
      - ENABLE_CUDA=0
      - HF_HOME=/app/cache
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    volumes:
      - transformers_cache:/app/cache
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/.well-known/ready')"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 120s
    restart: unless-stopped
    networks:
      - esco_network

#  esco-ingest:
#    build: .
#    container_name: esco_ingestion
#    depends_on:
#      weaviate:
#        condition: service_healthy
#      t2v-transformers:
#        condition: service_healthy
#    environment:
#      - PYTHONPATH=/app
#      - PYTHONUNBUFFERED=1
#    volumes:
#      - ./data:/app/data
#      - ./logs:/app/logs
#      - ./src:/app/src
#      - ./config:/app/config
#      - ./resources:/app/resources
#    command: >
#      sh -c "python -m src.esco_cli ingest --config config/weaviate_config.yaml --profile default"
#    restart: "no"
#    networks:
#      - esco_network

  esco-init:
    build: .
    container_name: esco_init
    depends_on:
      weaviate:
        condition: service_healthy
      t2v-transformers:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DOCKER_ENV=true
      - NON_INTERACTIVE=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src
      - ./config:/app/config
      - ./scripts:/app/scripts
      - ./resources:/app/resources # Ensure resources are mounted for schema access
    command: ["/app/scripts/init_ingestion.sh"]
    restart: "no"
    networks:
      - esco_network

  esco-search:
    build: .
    container_name: esco_search
    depends_on:
      weaviate:
        condition: service_healthy
      t2v-transformers:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src
      - ./config:/app/config
      - ./resources:/app/resources
    ports:
      - "8000:8000"
    command: >
      sh -c "python -m src.search_service"
    restart: unless-stopped
    networks:
      - esco_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--method=GET", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  esco-cli:
    build: .
    container_name: esco_cli
    depends_on:
      weaviate:
        condition: service_healthy
      t2v-transformers:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src
      - ./config:/app/config
      - ./resources:/app/resources
    networks:
      - esco_network
    # No default command - will be specified when running

networks:
  esco_network:
    driver: bridge

volumes:
  weaviate_data:
  transformers_cache: